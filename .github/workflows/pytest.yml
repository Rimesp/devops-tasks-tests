name: CI/CD Pipeline for DevOps Tasks

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Python (for pytest tests)
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    # Step 3: Install Python dependencies and run tests
    - name: Install dependencies and run tests
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pytest --cov=devops_tasks --cov-report=xml
  
    # Step 4: SonarQube Analysis
    - name: Download and Extract SonarScanner
      run: |
        curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
        unzip -o sonar-scanner-cli.zip -d $HOME
        export PATH="$HOME/sonar-scanner-4.8.0.2856-linux/bin:$PATH"

    - name: Debug SonarScanner Path
      run: |
        ls -la $HOME/sonar-scanner-4.8.0.2856-linux/bin
        echo $PATH

    - name: SonarQube Analysis
      env:
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        $HOME/sonar-scanner-4.8.0.2856-linux/bin/sonar-scanner \
          -Dsonar.projectKey=devops-tasks-tests-token \
          -Dsonar.sources=. \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN \
          -Dsonar.python.coverage.reportPaths=coverage.xml
  
    # Step 5: Log in to Docker Hub
    - name: Log in to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
  
    # Step 6: Build the Docker image
    - name: Build Docker image
      run: docker build -t rrim/devops-tasks-tests:latest .
  
    # Step 7: Push the Docker image to Docker Hub
    - name: Push Docker image
      run: docker push rrim/devops-tasks-tests:latest
